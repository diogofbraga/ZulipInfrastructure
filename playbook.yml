- hosts: localhost
  connection: local
  gather_facts: no
  roles:
    - role: gcp
      vars:
        gcp_zone: europe-west1-b
        gcp_region: europe-west1
        gcp_project: helpful-range-257511
        gcp_cred_kind: serviceaccount
        gcp_cred_file: credentials.json
        gcp_machine_type: n1-standard-1
        source_image: projects/ubuntu-os-cloud/global/images/ubuntu-1604-xenial-v20191113
        disk_size: 20
        disks:
          - disk-01
          - disk-02
          - disk-03
          - disk-04
          - disk-05
          - disk-06
          - disk-07
        addresses:
          - addr-01
          - addr-02
          - addr-03
          - addr-04
          - addr-05
          - addr-06
          - addr-07
        instances:
          - { index: 1, tag: [django1, beat] }
          - { index: 2, tag: [tornado, beat] }
          - { index: 3, tag: [database1, beat] }
          - { index: 4, tag: [database2, beat] }
          - { index: 5, tag: [nginx1, beat] }
          - { index: 6, tag: [redis, beat] }
          - { index: 7, tag: elastic }

- hosts: all
  become: yes
  roles:
    - { role: users, payload: users.yml }

- hosts: database*
  become: yes
  roles:
    - { role: db-postgresql, addresses: '*', version: '9.5' }
    - { role: postgresql-db, dbname: 'zulip' }
    - {
      role: postgresql-user,
      username: 'zulip',
      password: 'zulippass', #"{{ lookup('passwordstore','ansible/uc/db create=true length=8') }}",
      dbname: 'zulip'
      }

- hosts: redis
  become: yes
  roles:
    - {role: redis,
      ipv4_addr: 127.0.0.1,
      redis_user: redis,
      redis_group: redis,
      redis_bind_addr: 0.0.0.0,
      redis_port: 6379,
      redis_tcp_sockets: 511,
      redis_socket: /var/run/redis/redis.sock,
      redis_socket_permissions: 770,
      redis_logfile: /var/log/redis/redis-server.log
      }

- hosts: tornado
  become: yes
  roles:
    - { role: zulip, addresses: addr-03 }

- hosts: nginx*
  become: yes
  roles:
    - web-nginx
    - {
      role: nginx-vhost,
      template: uwsgi-vhost,
      fqdn: uc.lsd.di.uminho.pt,
      root: /srv/apps,
      backend_addresses: "{{ groups['tornado']  }}",
      backend_port: 5000
      }

- hosts: elastic
  become: yes
  roles:
    - role: elastic
      vars:
        # elasticsearch
        elasticsearch_instance_name: "monitor"
        elasticsearch_server_port: 9200
        elasticsearch_server_host: "0.0.0.0"
        # kibana
        kibana_server_port: 5601
        kibana_server_host: "0.0.0.0"
        kibana_elasticsearch_url: "http://localhost:9200"


- hosts: beat
  become: yes
  gather_facts: yes
  roles:
    - role: metricbeat
      vars:
        # elasticsearch
        elasticsearch_server_port: 9200
        kibana_server_port: 5601
        elasticsearch_server_host: "{{ hostvars[groups['elastic'][0]]['ansible_default_ipv4']['address'] }}"
        # dashboards
        enable_dashboards: true
